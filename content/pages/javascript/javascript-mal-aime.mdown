Date: 7 May 2011
Categories: javascript

# JavaScript, ce mal aimé

> Purée, mais JavaScript c'est de la merde !

J'avoue que de telles pensées de haine pur m'ont déjà envahit, dans d'intense phase d'incompréhension devant mes scripts JS. Et je suis sur que je ne suis pas le seul.

Et bien, vous savez quoi...Cela ne m'arrive presque plus. Et mes explications sur comment j'y suis parvenu, pourront peut-être vous épargner quelques cheveux blanc.

Si je voulais faire court, il suffit d'une chose pour arrêter de se prendre la tête avec JavaScript: **apprendre le langage JavaScript**. Dixit [Douglas Crockford](http://fr.wikipedia.org/wiki/Douglas_Crockford "Douglas Crockford"), [JavaScript est le langage le moins comprit au monde](http://www.crockford.com/javascript/javascript.html "The World's Most Misunderstood Programming Language"). Cela date de 2001, mais les choses n'ont pas tellement évoluées. 

Et pourquoi est il mal compris ?

Principalement à cause de l'utilisation quasi-exclusive qu'on en fait: **pour manipuler le DOM**. Et ce, le plus souvent avec un framework tel que [jQuery](http://jquery.com/ "jQuery"). On se dit alors que l'on a pas vraiment besoin de connaitre le langage, que des **copier-coller** suffiront sans plus chercher à comprendre. Et c'est la que les problèmes commencent. 

En effet, faute de connaitre le langage, **on essaye de reproduire des principes que l'on connait bien en Java/Php/**..., mais la plupart du temps cela ne fonctionne pas (Ou en tout cas, pas comme attendu). Sans compter sur la documentation des premiers résultats de google, qui restent d'une grande médiocrité, [malgré l'effort fournit par Mozilla](http://hacks.mozilla.org/2010/10/promotejs-a-worldwide-call-for-improving-js-documentation-visibility/ "Promote js"). 

[ ![JavaScript Array .pop](http://static.jsconf.us/promotejsv.gif "JavaScript Array .pop") ](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array)

Ces confusions entrainent souvent une utilisation de JavaScript qui donne des résultats, mais avec **un code de mauvaise qualité**. Et cela s'aggrave quand la quantité de code devient importante: **le fameux code spaghetti**.

Mais tout n'est pas perdu. Je vous propose ci-dessous une liste de sujets qui me paraissent importants à bien connaitre pour utiliser JavaScript correctement. Ces spécificités du langage qui sont la plupart du temps méconnus. Vous allez surement en apprendre plus que ce que vous croyez, et je vous jures que ça vaut le coup d'oeil.












